# app custom Makefile

# Docker repo & image name without version
IMAGE     ?= plausible/analytics
# Docker image version
IMAGE_VER ?= v1.5
# Hostname for external access
APP_SITE  ?= plau.dev.lan
# App names (db/user name etc)
APP_NAME  ?= plau

# Enable DB usage:
# * Add DB config part to .env.sample
# * Enable db* targets
# * make db-create inside .drone-default target
USE_DB    ?= yes

# ------------------------------------------------------------------------------
# app custom config

SECRET_KEY_BASE ?= $(shell openssl rand -base64 64 | tr -d '\n' ; echo)

BASE_URL ?= $(HTTP_PROTO)://$(APP_SITE)

# Possible values are true (full restriction), false (no restriction), and invite_only (only the invited users can register).
DISABLE_REGISTRATION ?= false

DCAPE_ROOT      ?= /opt/dcape/var

#CONTAINER_ID ?= $(APP_TAG)_app_1

# ------------------------------------------------------------------------------
# .env template (custom part)
# inserted in .env.sample via 'make config'
define CONFIG_CUSTOM
# ------------------------------------------------------------------------------
# app custom config, generated by make config
# db:$(USE_DB) user:$(ADD_USER)

SECRET_KEY_BASE=$(SECRET_KEY_BASE)

BASE_URL=$(BASE_URL)

DISABLE_REGISTRATION=$(DISABLE_REGISTRATION)

#RELEASE_DISTRIBUTION=none

# HTTP proto (based on USE_TLS)
#HTTP_PROTO=$(HTTP_PROTO)

# Path to /opt/dcape/var. Used only outside drone
DCAPE_ROOT=$(DCAPE_ROOT)

endef

# ------------------------------------------------------------------------------
# Find and include DCAPE/apps/drone/dcape-app/Makefile
DCAPE_COMPOSE   ?= dcape-compose
DCAPE_MAKEFILE  ?= $(shell docker inspect -f "{{.Config.Labels.dcape_app_makefile}}" $(DCAPE_COMPOSE))
ifeq ($(shell test -e $(DCAPE_MAKEFILE) && echo -n yes),yes)
  include $(DCAPE_MAKEFILE)
else
  include /opt/dcape-app/Makefile
endif

# -----------------------------------------------------------------------------
## Custom app targets
#:

# plausible_events_db

#CONT = plau-dev-lan_events_db_1

events-db-create: CMD=run events_db clickhouse-client --host events_db --port 8123 --query "CREATE DATABASE IF NOT EXISTS plausible_events_db"
events-db-create: dc

